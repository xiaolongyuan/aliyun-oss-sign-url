<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <name>aliyun :: module :: aliyun-oss-sign-url</name>
    <groupId>com.aliyun.oss</groupId>
    <artifactId>aliyun-oss-sign-url</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>jar</packaging>
    <modelVersion>4.0.0</modelVersion>


    <dependencies>
        <!--<dependency>-->
            <!--<groupId>commons-codec</groupId>-->
            <!--<artifactId>commons-codec</artifactId>-->
        <!--</dependency>-->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
    </dependencies>


    <!-- 设定除中央仓库(repo1.maven.org/maven2/)外的其他仓库,按设定顺序进行查询 -->
    <repositories>
        <repository>
            <id>public</id>
            <name>Public Repositories</name>
            <url>http://192.168.199.78:9999/nexus/content/groups/public/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
                <checksumPolicy>warn</checksumPolicy>
            </snapshots>
        </repository>
        <repository>
            <id>central</id>
            <name>Central Repository</name>
            <url>http://repo.maven.apache.org/maven2</url>
        </repository>    
        <repository>
            <id>spy</id>
            <name>Spy Repository</name>
            <url>http://files.couchbase.com/maven2/</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>maven-restlet</id>
            <name>Restlet repository</name>
            <url>http://maven.restlet.com</url>
        </repository>
        <!-- To use snapshots, you must also use the Sonatype Snapshots respository -->
        <repository>
            <id>sonatype-snapshots</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
        </repository>
    </repositories>

    <!--<pluginRepositories>-->
        <!--<pluginRepository>-->
            <!--<id>public</id>-->
            <!--<name>Public Repositories</name>-->
            <!--<url>http://192.168.199.78:9999/nexus/content/groups/public</url>-->
            <!--<releases>-->
                <!--<enabled>true</enabled>-->
            <!--</releases>-->
            <!--<snapshots>-->
                <!--<enabled>true</enabled>-->
                <!--<updatePolicy>always</updatePolicy>-->
                <!--<checksumPolicy>warn</checksumPolicy>-->
            <!--</snapshots>-->
        <!--</pluginRepository>-->
    <!--</pluginRepositories>-->

    <!--<distributionManagement>-->
        <!--<repository>-->
            <!--<id>releases</id>-->
            <!--<name>Nexus Release Repository</name>-->
            <!--<url>http://192.168.199.78:9999/nexus/content/repositories/releases/</url>-->
        <!--</repository>-->
        <!--<snapshotRepository>-->
            <!--<id>snapshots</id>-->
            <!--<name>Nexus Snapshot Repository</name>-->
            <!--<url>http://192.168.199.78:9999/nexus/content/repositories/snapshots/</url>-->
        <!--</snapshotRepository>-->
    <!--</distributionManagement>-->


    <build>
        <defaultGoal>compile</defaultGoal>
        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                    <encoding>UTF-8</encoding>  <!-- “编码 GBK 的不可映射字符”问题的解决 -->
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <includes>
                        <!--不写匹配默认规则,TestSuit结尾，test开头的方法  -->
                        <include>**/*Test.java</include>   <!-- 两个星号**用来匹配任意路径，一个星号*用来获取除路径风格符外的0个或多个字符 -->
                    </includes>
                    <excludes>
                        <!--<exclude>**/CollectionBillTestCase.java</exclude>-->
                    </excludes>
                    <skip>false</skip>  <!-- 略过单元测试 -->
                    <testFailureIgnore>true</testFailureIgnore> <!-- 当Maven 遇到一个测试失败，它默认的行为是停止当前的构建。 如果你希望继续构建项目，即使 Surefire 插件遇到了失败的单元测试，你就需要设置 Surefire 的testFailureIgnore 这个配置属性为 true -->
                </configuration>
            </plugin>


            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>  <!-- 在jar包中增加依赖jar路径说明 -->
                            <classpathPrefix>lib/</classpathPrefix>
                            <mainClass>com.garfield.gui.Main</mainClass>
                        </manifest>

                        <!-- 用maven在MANIFEST.MF资料中的Class-Path中增加当前目录(.)  -->
                        <manifestEntries>
                            <Class-Path>.</Class-Path>
                        </manifestEntries>

                    </archive>
                </configuration>
            </plugin>

        </plugins>


        <resources>
            <!--打包进XML等文件，排除java及版本控制文件  -->
            <resource>
                <directory>src/test/java</directory>
                <excludes>
                    <exclude>**/*.java</exclude>
                    <exclude>**/.svn/*</exclude>
                </excludes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.*</include>
                    <include>**/*.*</include>
                </includes>
            </resource>
        </resources>
    </build>
</project>